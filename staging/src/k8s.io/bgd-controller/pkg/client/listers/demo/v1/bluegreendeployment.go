/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	v1 "k8s.io/bgd-controller/pkg/apis/demo/v1"
	"k8s.io/client-go/tools/cache"
)

// BlueGreenDeploymentLister helps list BlueGreenDeployments.
type BlueGreenDeploymentLister interface {
	// List lists all BlueGreenDeployments in the indexer.
	List(selector labels.Selector) (ret []*v1.BlueGreenDeployment, err error)
	// BlueGreenDeployments returns an object that can list and get BlueGreenDeployments.
	BlueGreenDeployments(namespace string) BlueGreenDeploymentNamespaceLister
	BlueGreenDeploymentListerExpansion
}

// blueGreenDeploymentLister implements the BlueGreenDeploymentLister interface.
type blueGreenDeploymentLister struct {
	indexer cache.Indexer
}

// NewBlueGreenDeploymentLister returns a new BlueGreenDeploymentLister.
func NewBlueGreenDeploymentLister(indexer cache.Indexer) BlueGreenDeploymentLister {
	return &blueGreenDeploymentLister{indexer: indexer}
}

// List lists all BlueGreenDeployments in the indexer.
func (s *blueGreenDeploymentLister) List(selector labels.Selector) (ret []*v1.BlueGreenDeployment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BlueGreenDeployment))
	})
	return ret, err
}

// BlueGreenDeployments returns an object that can list and get BlueGreenDeployments.
func (s *blueGreenDeploymentLister) BlueGreenDeployments(namespace string) BlueGreenDeploymentNamespaceLister {
	return blueGreenDeploymentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BlueGreenDeploymentNamespaceLister helps list and get BlueGreenDeployments.
type BlueGreenDeploymentNamespaceLister interface {
	// List lists all BlueGreenDeployments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.BlueGreenDeployment, err error)
	// Get retrieves the BlueGreenDeployment from the indexer for a given namespace and name.
	Get(name string) (*v1.BlueGreenDeployment, error)
	BlueGreenDeploymentNamespaceListerExpansion
}

// blueGreenDeploymentNamespaceLister implements the BlueGreenDeploymentNamespaceLister
// interface.
type blueGreenDeploymentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BlueGreenDeployments in the indexer for a given namespace.
func (s blueGreenDeploymentNamespaceLister) List(selector labels.Selector) (ret []*v1.BlueGreenDeployment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.BlueGreenDeployment))
	})
	return ret, err
}

// Get retrieves the BlueGreenDeployment from the indexer for a given namespace and name.
func (s blueGreenDeploymentNamespaceLister) Get(name string) (*v1.BlueGreenDeployment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("bluegreendeployment"), name)
	}
	return obj.(*v1.BlueGreenDeployment), nil
}
